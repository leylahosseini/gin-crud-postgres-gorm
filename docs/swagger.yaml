definitions:
  model.User:
    properties:
      email:
        description: '@required'
        type: string
      id:
        description: '@primary'
        type: integer
      name:
        description: '@required'
        type: string
    required:
    - email
    - name
    type: object
info:
  contact: {}
paths:
  /users:
    get:
      description: |-
        This is the API for managing users.
        Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Get all users
    post:
      responses: {}
  /users/{id}:
    delete:
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete a user
    get:
      description: Get details of a user by their ID
      parameters:
      - description: User ID
        example: '"1"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Get a user by ID
    put:
      description: Update a user by their ID
      parameters:
      - description: User ID
        example: '"1"'
        in: path
        name: id
        required: true
        type: string
      - description: User data to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Update a user
swagger: "2.0"
